{"version":3,"sources":["util.js","components/Products.js","components/Filter.js","components/Basket.js","App.js","serviceWorker.js","index.js"],"names":["num","Number","toFixed","toLocaleString","Products","productItems","this","props","products","map","product","className","key","id","href","onClick","e","handleAddToCart","src","sku","alt","title","util","price","Component","Filter","count","value","sort","onChange","handleChangeSort","Basket","cartItems","length","item","handleRemoveFromCart","reduce","a","c","alert","App","state","filteredProducts","bind","fetch","then","res","json","data","setState","localStorage","getItem","JSON","parse","target","listProducts","productAllInCart","forEach","push","setItem","stringify","filter","elm","b","size","handleChangeSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.960a80e7.chunk.js","sourcesContent":["export default {\r\n  formatCurrency: function (num) {\r\n    return '$' + Number(num.toFixed(2)).toLocaleString() + ' ';\r\n  },\r\n};\r\n","import React, { Component } from 'react';\r\nimport util from '../util';\r\n\r\nexport default class Products extends Component {\r\n  render() {\r\n    const productItems = this.props.products.map((product) => (\r\n      <div className='col-md-4' key={product.id}>\r\n        <div className='thumbnail text-center'>\r\n          <a\r\n            href={`#${product.id}`}\r\n            onClick={(e) => this.props.handleAddToCart(e, product)}\r\n          >\r\n            <img src={`/products/${product.sku}_2.jpg`} alt={product.title} />\r\n            <p>{product.title}</p>\r\n          </a>\r\n          <div>\r\n            <b>{util.formatCurrency(product.price)}</b>\r\n            <button\r\n              className='btn btn-primary'\r\n              onClick={(e) => this.props.handleAddToCart(e, product)}\r\n            >\r\n              Add To Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n    return <div className='row'>{productItems}</div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Filter extends Component {\r\n  render() {\r\n    return (\r\n      <div className='row'>\r\n        <div className='col-md-4'>{this.props.count} product found.</div>\r\n\r\n        <div className='col-md-4'>\r\n          <label>\r\n            Order by\r\n            <select\r\n              className='form-control'\r\n              value={this.props.sort}\r\n              onChange={this.props.handleChangeSort}\r\n            >\r\n              <option value=''> Select </option>\r\n              <option value='lowest'> Low to High </option>\r\n              <option value='highest'> High to Low </option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport util from '../util';\r\n\r\nexport default class Basket extends Component {\r\n  render() {\r\n    const { cartItems } = this.props;\r\n    return (\r\n      <div className='alert alert-info'>\r\n        {cartItems.length === 0 ? (\r\n          'Basket is empty'\r\n        ) : (\r\n          <div>\r\n            {' '}\r\n            You have {cartItems.length} product in the basket.\r\n            {cartItems.length > 0 && (\r\n              <div>\r\n                <ul>\r\n                  {cartItems.map((item) => (\r\n                    <li>\r\n                      <b>{item.title}</b>X {item.count} ={' '}\r\n                      {item.price * item.count}\r\n                      <button\r\n                        className='btn btn-danger'\r\n                        onClick={(e) =>\r\n                          this.props.handleRemoveFromCart(e, item)\r\n                        }\r\n                      >\r\n                        X\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                Total:{' '}\r\n                {util.formatCurrency(\r\n                  cartItems.reduce((a, c) => c.price * c.count, 0)\r\n                )}\r\n                <button\r\n                  className='btn btn-primary'\r\n                  onClick={() => alert('checkout needs to implement..')}\r\n                >\r\n                  Checkout\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Products from './components/Products';\nimport Filter from './components/Filter';\nimport Basket from './components/Basket';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      filteredProducts: [],\n      cartItems: [],\n    };\n    this.handleChangeSort = this.handleChangeSort.bind(this);\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n  }\n\n  componentWillMount() {\n    fetch('http://localhost:8000/products')\n      .then((res) => res.json())\n      .then((data) =>\n        this.setState({\n          products: data,\n          filteredProducts: data,\n        })\n      );\n    if (localStorage.getItem('cartItems')) {\n      this.setState({\n        cartItems: JSON.parse(localStorage.getItem('cartItems')),\n      });\n    }\n  }\n\n  handleChangeSort(e) {\n    this.setState({ sort: e.target.value });\n    this.listProducts();\n  }\n\n  handleAddToCart(e, product) {\n    this.setState((state) => {\n      const cartItems = state.cartItems;\n      let productAllInCart = false;\n      cartItems.forEach((item) => {\n        if (item.id === product.id) {\n          productAllInCart = true;\n          item.count++;\n        }\n      });\n      if (!productAllInCart) {\n        cartItems.push({ ...product, count: 1 });\n      }\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return cartItems;\n    });\n  }\n\n  handleRemoveFromCart(e, item) {\n    this.setState((state) => {\n      const cartItems = state.cartItems.filter((elm) => elm.id !== item.id);\n      localStorage.setItem('cartItems', cartItems);\n      return { cartItems };\n    });\n  }\n\n  listProducts() {\n    this.setState((state) => {\n      if (state.sort !== '') {\n        state.products.sort((a, b) =>\n          state.sort === 'lowest'\n            ? a.price > b.price\n              ? 1\n              : -1\n            : a.price < b.price\n            ? 1\n            : -1\n        );\n      } else {\n        state.products.sort((a, b) => (a.id < b.id ? 1 : -1));\n      }\n      return { filteredProducts: state.products };\n    });\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <h1>E-commerce Shopping Cart</h1>\n        <hr />\n        <div className='row'>\n          <div className='col-md-8'>\n            <Filter\n              size={this.state.size}\n              sort={this.state.sort}\n              handleChangeSize={this.handleChangeSize}\n              handleChangeSort={this.handleChangeSort}\n              count={this.state.filteredProducts.length}\n            />\n            <hr />\n            <Products\n              products={this.state.filteredProducts}\n              handleAddToCart={this.handleAddToCart}\n            />\n          </div>\n          <div className='col-md-4'>\n            <Basket\n              cartItems={this.state.cartItems}\n              handleRemoveFromCart={this.handleRemoveFromCart}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}